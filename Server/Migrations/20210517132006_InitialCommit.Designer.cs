// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Schwalbe.Server.Models;

namespace Schwalbe.Server.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20210517132006_InitialCommit")]
    partial class InitialCommit
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("Schwalbe.Shared.Entities.Application", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("ShortName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Applications");
                });

            modelBuilder.Entity("Schwalbe.Shared.Entities.CallHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CompanyName")
                        .HasColumnType("text");

                    b.Property<DateTime>("DeletedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("IncomingDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("InquirerName")
                        .HasColumnType("text");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("TelephoneNo")
                        .HasColumnType("text");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("CallHistories");
                });

            modelBuilder.Entity("Schwalbe.Shared.Entities.InquirerKind", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("InquirerKinds");
                });

            modelBuilder.Entity("Schwalbe.Shared.Entities.Inquiry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Answer")
                        .HasColumnType("text");

                    b.Property<int>("ApplicationId")
                        .HasColumnType("integer");

                    b.Property<bool>("ApprovalFlag")
                        .HasColumnType("boolean");

                    b.Property<int?>("CallHistoryId")
                        .HasColumnType("integer");

                    b.Property<bool>("CompletedFlag")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("DeletedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("IncomingDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("InquirerKindId")
                        .HasColumnType("integer");

                    b.Property<int>("InquiryClassificationId")
                        .HasColumnType("integer");

                    b.Property<int>("InquiryMethodId")
                        .HasColumnType("integer");

                    b.Property<string>("Question")
                        .HasColumnType("text");

                    b.Property<int?>("RelatedInquiryId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationId");

                    b.HasIndex("CallHistoryId");

                    b.HasIndex("InquirerKindId");

                    b.HasIndex("InquiryClassificationId");

                    b.HasIndex("InquiryMethodId");

                    b.HasIndex("UserId");

                    b.ToTable("Inquiries");
                });

            modelBuilder.Entity("Schwalbe.Shared.Entities.InquiryClassification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("Name")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("InquiryClassifications");
                });

            modelBuilder.Entity("Schwalbe.Shared.Entities.InquiryMethod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("InquiryMethods");
                });

            modelBuilder.Entity("Schwalbe.Shared.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("LoginId")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.Property<byte[]>("Salt")
                        .HasColumnType("bytea");

                    b.Property<string>("Token")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Schwalbe.Shared.Entities.CallHistory", b =>
                {
                    b.HasOne("Schwalbe.Shared.Entities.User", "User")
                        .WithMany("CallHistories")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Schwalbe.Shared.Entities.Inquiry", b =>
                {
                    b.HasOne("Schwalbe.Shared.Entities.Application", "Application")
                        .WithMany("Inquiries")
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Schwalbe.Shared.Entities.CallHistory", "CallHistory")
                        .WithMany()
                        .HasForeignKey("CallHistoryId");

                    b.HasOne("Schwalbe.Shared.Entities.InquirerKind", "InquirerKind")
                        .WithMany("Inquiries")
                        .HasForeignKey("InquirerKindId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Schwalbe.Shared.Entities.InquiryClassification", "InquiryClassification")
                        .WithMany("Inquiries")
                        .HasForeignKey("InquiryClassificationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Schwalbe.Shared.Entities.InquiryMethod", "InquiryMethod")
                        .WithMany("Inquiries")
                        .HasForeignKey("InquiryMethodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Schwalbe.Shared.Entities.User", "User")
                        .WithMany("Inquiries")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Application");

                    b.Navigation("CallHistory");

                    b.Navigation("InquirerKind");

                    b.Navigation("InquiryClassification");

                    b.Navigation("InquiryMethod");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Schwalbe.Shared.Entities.Application", b =>
                {
                    b.Navigation("Inquiries");
                });

            modelBuilder.Entity("Schwalbe.Shared.Entities.InquirerKind", b =>
                {
                    b.Navigation("Inquiries");
                });

            modelBuilder.Entity("Schwalbe.Shared.Entities.InquiryClassification", b =>
                {
                    b.Navigation("Inquiries");
                });

            modelBuilder.Entity("Schwalbe.Shared.Entities.InquiryMethod", b =>
                {
                    b.Navigation("Inquiries");
                });

            modelBuilder.Entity("Schwalbe.Shared.Entities.User", b =>
                {
                    b.Navigation("CallHistories");

                    b.Navigation("Inquiries");
                });
#pragma warning restore 612, 618
        }
    }
}
